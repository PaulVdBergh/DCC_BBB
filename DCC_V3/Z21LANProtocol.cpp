/*
 * Copyright (C) 2017 Paul Van den Bergh
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* 
 * File:   Z21LANProtocol.cpp
 * Author: Paul Van den Bergh
 * 
 * Created on 3 oktober 2017, 16:13
 */

#include "Z21LANProtocol.h"

namespace DCC_V3
{
	//  Queries
	const uint8_t LAN_GET_SERIAL_NUMBER[] = { 0x04, 0x00, 0x10, 0x00 };
	const uint8_t LAN_GET_CODE[] = { 0x04, 0x00, 0x18, 0x00 };
	const uint8_t LAN_GET_HWINFO[] = { 0x04, 0x00, 0x1A, 0x00 };
	const uint8_t LAN_LOGOFF[] = { 0x04, 0x00, 0x30, 0x00 };
	const uint8_t LAN_X_GET_VERSION[] = { 0x07, 0x00, 0x40, 0x00, 0x21, 0x21,
	        0x00 };
	const uint8_t LAN_X_GET_STATUS[] = { 0x07, 0x00, 0x40, 0x00, 0x21, 0x24,
	        0x05 };
	const uint8_t LAN_X_SET_TRACK_POWER_OFF[] = { 0x07, 0x00, 0x40, 0x00, 0x21,
	        0x80, 0xA1 };
	const uint8_t LAN_X_SET_TRACK_POWER_ON[] = { 0x07, 0x00, 0x40, 0x00, 0x21,
	        0x81, 0xA0 };
	const uint8_t LAN_X_DCC_READ_REGISTER[] = { 0x08, 0x00, 0x40, 0x00, 0x22,
	        0x11, 0x00, 0x00 };
	const uint8_t LAN_X_CV_READ[] = { 0x09, 0x00, 0x40, 0x00, 0x23, 0x11, 0x00,
	        0x00, 0x00 };
	const uint8_t LAN_X_DCC_WRITE_REGISTER[] = { 0x09, 0x00, 0x40, 0x00, 0x23,
	        0x12, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_CV_WRITE[] = { 0x0A, 0x00, 0x40, 0x00, 0x24, 0x12, 0x00,
	        0x00, 0x00, 0x00 };
	const uint8_t LAN_X_MM_WRITE_BYTE[] = { 0x0A, 0x00, 0x40, 0x00, 0x24, 0xFF,
	        0x00, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_GET_TURNOUT_INFO[] = { 0x08, 0x00, 0x40, 0x00, 0x43,
	        0x00, 0x00, 0x00 };
	const uint8_t LAN_X_SET_TURNOUT[] = { 0x09, 0x00, 0x40, 0x00, 0x53, 0x00,
	        0x00, 0x00, 0x00 };
	const uint8_t LAN_X_SET_STOP[] = { 0x06, 0x00, 0x40, 0x00, 0x80, 0x80 };
	const uint8_t LAN_X_GET_LOCO_INFO[] = { 0x09, 0x00, 0x40, 0x00, 0xE3, 0xF0,
	        0x00, 0x00, 0x00 };
	const uint8_t LAN_X_SET_LOCO_DRIVE[] = { 0x0A, 0x00, 0x40, 0x00, 0xE4, 0x00,
	        0x00, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_SET_LOCO_FUNCTION[] = { 0x0A, 0x00, 0x40, 0x00, 0xE4,
	        0xF8, 0x00, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_CV_POM_WRITE_BYTE[] = { 0x0C, 0x00, 0x40, 0x00, 0xE6,
	        0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_CV_POM_WRITE_BIT[] = { 0x0C, 0x00, 0x40, 0x00, 0xE6,
	        0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_CV_POM_READ_BYTE[] = { 0x0C, 0x00, 0x40, 0x00, 0xE6,
	        0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_CV_POM_ACCESSORY_WRITE_BYTE[] = { 0x0C, 0x00, 0x40,
	        0x00, 0xE6, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_CV_POM_ACCESSORY_WRITE_BIT[] = { 0x0C, 0x00, 0x40, 0x00,
	        0xE6, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_CV_POM_ACCESSORY_READ_BYTE[] = { 0x0C, 0x00, 0x40, 0x00,
	        0xE6, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	const uint8_t LAN_X_GET_FIRMWARE_VERSION[] = { 0x07, 0x00, 0x40, 0x00, 0xF1,
	        0x0A, 0xFB };
	const uint8_t LAN_SET_BROADCASTFLAGS[] = { 0x08, 0x00, 0x50, 0x00, 0x00,
	        0x00, 0x00, 0x00 };
	const uint8_t LAN_GET_BROADCASTFLAGS[] = { 0x04, 0x00, 0x51, 0x00 };
	const uint8_t LAN_GET_LOCOMODE[] = { 0x06, 0x00, 0x60, 0x00, 0x00, 0x00 };
	const uint8_t LAN_SET_LOCOMODE[] = { 0x07, 0x00, 0x61, 0x00, 0x00, 0x00,
	        0x00 };
	const uint8_t LAN_GET_TURNOUTMODE[] = { 0x06, 0x00, 0x70, 0x00, 0x00, 0x00 };
	const uint8_t LAN_SET_TURNOUTMODE[] = { 0x07, 0x00, 0x71, 0x00, 0x00, 0x00,
	        0x00 };
	const uint8_t LAN_RMBUS_GETDATA[] = { 0x05, 0x00, 0x81, 0x00, 0x00 };
	const uint8_t LAN_RMBUS_PROGRAMMODULE[] = { 0x05, 0x00, 0x82, 0x00, 0x00 };
	const uint8_t LAN_SYSTEMSTATE_GETDATA[] = { 0x04, 0x00, 0x85, 0x00 };
	const uint8_t LAN_RAILCOM_GETDATA[] = { 0x07, 0x00, 0x89, 0x00, 0x00, 0x00,
	        0x00 };
	const uint8_t LAN_LOCONET_FROM_LAN[] = { 0x04, 0x00, 0xA2, 0x00 };
	const uint8_t LAN_LOCONET_DISPATCH_ADDR[] = { 0x06, 0x00, 0xA3, 0x00, 0x00,
	        0x00 };
	const uint8_t LAN_LOCONET_DETECTOR[] = { 0x07, 0x00, 0xA4, 0x00, 0x00, 0x00,
	        0x00 };
	const uint8_t LAN_CAN_DETECTOR[] = { 0x07, 0x00, 0xC4, 0x00, 0x00, 0x00,
	        0x00 };

	//  Responses
	const uint8_t LAN_SERIAL_NUMBER[] = { 0x08, 0x00, 0x10, 0x00, 0x00, 0x00,
	        0x00, 0x00 };
	const uint8_t LAN_CODE[] = { 0x05, 0x00, 0x18, 0x00, 0x00 };
	const uint8_t LAN_HWINFO[] = { 0x0C, 0x00, 0x1A, 0x00, 0x01, 0x02, 0x00,
	        0x00, 0x30, 0x01, 0x00, 0x00 };
	const uint8_t LAN_BROADCASTFLAGS[] = { 0x08, 0x00, 0x51, 0x00, 0x00, 0x00,
	        0x00, 0x00 };
	const uint8_t LAN_SYSTEMSTATE[] = { 0x14, 0x00, 0x84, 0x00, 0x00, 0x00,
	        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	        0x00, 0x00, 0x00 };
	const uint8_t LAN_X_BC_STOPPED[] = { 0x07, 0x00, 0x40, 0x00, 0x81, 0x00,
	        0x81 };
	const uint8_t LAN_X_VERSION[] = { 0x09, 0x00, 0x40, 0x00, 0x63, 0x21, 0x30,
	        0x12, 0x60 };
	const uint8_t LAN_X_STATUS[] = { 0x08, 0x00, 0x40, 0x00, 0x62, 0x22, 0x00,
	        0x40 };
	const uint8_t LAN_X_BC_TRACK_POWER_OFF[] = { 0x07, 0x00, 0x40, 0x00, 0x61,
	        0x00, 0x61 };
	const uint8_t LAN_X_BC_TRACK_POWER_ON[] = { 0x07, 0x00, 0x40, 0x00, 0x61,
	        0x01, 0x60 };
	const uint8_t LAN_X_FIRMWARE_VERSION[] = { 0x09, 0x00, 0x40, 0x00, 0xF3,
	        0x0A, 0x01, 0x30, 0xC8 };

} /* namespace DCC_V3 */
